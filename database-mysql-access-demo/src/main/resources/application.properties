
server.port = 4000

#Properties inserted to test @ConfigurationProperties annotion
#spring.name=test
#spring.password=admin

# specify the folder containing view pages and type of view pages 
# if suffix is specified then we dont need to return or set view name with extension
# the suffix is directly added 
#spring.mvc.view.prefix=/folder-name/
spring.mvc.view.suffix=.jsp

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.username=root
spring.datasource.password=infoobjects
spring.datasource.url=jdbc:mysql://localhost:3306/details
#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true

# Automatically creates entities if not present
# should be set to validate for production
spring.jpa.hibernate.ddl-auto=update

# logging
# if no colour code needed: %d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
# if colour code needed(use clr): %d{yyyy-MM-dd HH:mm:ss} %clr(%5p) %logger{36} - %msg%n
logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss} %5p %logger{36} - %msg%n)
logging.level.org.hibernate.SQL=debug

# Use this property if we need to write logs to a file
#logging.file=test-commons.log

# caching should be disabled for development profile so as to view the visible changes
# caching should not be disabled for production profile
spring.cache.type=NONE

# Whether to enable JPA repositories.
spring.data.jpa.repositories.enabled=true 

#spring.jpa.hibernate.naming-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
# To uses the names provided to entities in @Entity annotation 
# we use this strategy instead of implicit naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


spring.servlet.multipart.max-file-size=1024KB
spring.servlet.multipart.max-request-size=1024KB

 
#logging:
#  level:
#    org:
#      hibernate:
#        SQL: debug
#  pattern:
#    console: '%clr(%d{yyyy-MM-dd HH:mm:ss} %5p %logger{36} - %msg%n)'
#server:
#  port: 4000
#spring:
#  cache:
#    type: NONE
#  data:
#    jpa:
#      repositories:
#        enabled: true
#  datasource:
#    password: infoobjects
#    url: jdbc:mysql://localhost:3306/details
#    username: root
#  jpa:
#    hibernate:
#      ddl-auto: update
#      naming:
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
#    show-sql: true
#  mvc:
#    view:
#      suffix: .jsp
#  servlet:
#    multipart:
#      max-file-size: 1024KB
#      max-request-size: 1024KB
